<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>SetWinDelay - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The SetWinDelay function sets the delay that will occur after each windowing function, such as WinActivate." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>SetWinDelay</h1>

<p>设置在每次执行窗口函数(例如 <a href="WinActivate.htm">WinActivate</a>) 后的延时.</p>

<pre class="Syntax"><span class="func">SetWinDelay</span> Delay</pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>Delay</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>时间, 以毫秒为单位. 使用 -1 表示无延时, 而 0 表示最小延时. 如果未设置, 则默认延时为 100.</p>
  </dd>

</dl>

<h2 id="Remarks">备注</h2>
<p>除了 <a href="WinActive.htm">WinActive</a> 和 <a href="WinExist.htm">WinExist</a> 之外, 在每个窗口函数之后都会自动执行短暂的延迟(睡眠). 这样做是为了提高脚本的可靠性, 因为窗口在创建, 激活或最小化等操作之后有时需要一段 "休息" 时间, 以便它有机会更新自身, 并响应下一个脚本可能尝试发送给它的函数.</p>
<p>虽然允许使用 -1(完全无延时), 但建议至少使用 0, 以增强即使在 CPU 处于负载状态下脚本也能正确运行的几率.</p>
<p>延时为 0 时实际内部会执行 Sleep(0), 这会将脚本时间片段的剩余部分提供给可能需要它的任何其他进程. 如果没有其他进程需要, 则 Sleep(0) 相当于完全没有延时.</p>
<p>如果 CPU 比较慢或在负载下, 或启用了窗口动画, 那么可能需要较高的延迟值.</p>
<p>内置变量 <strong>A_WinDelay</strong> 包含当前设置.</p>
<p>每个新运行的<a href="../misc/Threads.htm">线程</a>(如 <a href="../Hotkeys.htm">热键</a>, <a href="../objects/Menu.htm">自定义菜单项</a>或<a href="SetTimer.htm">定时</a>子程序) 都会以此函数的默认设置开始. 这个默认设置可以通过在<a href="../Scripts.htm#auto">脚本启动</a>中使用此函数来改变.</p>
<h2 id="Related">相关</h2>
<p><a href="SetControlDelay.htm">SetControlDelay</a>, <a href="SetKeyDelay.htm">SetKeyDelay</a>, <a href="SetMouseDelay.htm">SetMouseDelay</a>, <a href="SendMode.htm">SendMode</a></p>
<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 在每次窗口函数后, 有 10 毫秒的延迟.</p>
<pre>SetWinDelay 10</pre>
</div>

</body>
</html>