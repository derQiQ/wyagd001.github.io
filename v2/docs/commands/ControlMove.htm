<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>ControlMove - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The ControlMove function moves or resizes a control." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>ControlMove</h1>

<p>移动控件或调整其大小.</p>

<pre class="Syntax"><span class="func">ControlMove</span> <span class="optional">X, Y, Width, Height, Control, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>X, Y</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p><em>Control</em> 新位置的左上角的 X 和 Y 坐标(单位为像素). 如果其中一个坐标为空, 那么 <em>Control</em> 在这个维度(坐标轴) 中的位置将保持不变. 这里的坐标相对于目标窗口的<a href="CoordMode.htm#Client">工作区</a>的左上角; 可以使用 <a href="ControlGetPos.htm">ControlGetPos</a> 来确定它们.</p>
  </dd>

  <dt>Width, Height</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p><em>Control</em> 的新宽度和高度(单位为像素). 如果其中一个参数为空或省略, 那么 <em>Control</em> 在这个维度(宽或高) 的大小将保持不变.</p>
  </dd>

  <dt>Control</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Objects.htm">对象</a></p>
    控件的 ClassNN, 文本或 HWND, 或具有 <code>Hwnd</code> 属性的对象. 有关详情, 请参阅 <a href="Control.htm#Parameter">Control 参数</a>.</p>
  </dd>

  <dt>WinTitle</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a>, <a href="../Concepts.htm#numbers">整数</a>或<a href="../Objects.htm">对象</a></p>
    <p>识别目标窗口的窗口标题或其他条件. 请参阅 <a href="../misc/WinTitle.htm">WinTitle</a>.</p>
  </dd>

  <dt>WinText</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>如果存在, 此参数必须是目标窗口的单个文本元素的子字符串(和内置的 Window Spy 工具显示的一样). 如果 <a href="DetectHiddenText.htm">DetectHiddenText</a> 为 ON, 那么会检测隐藏文本元素.</p>
  </dd>

  <dt>ExcludeTitle</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>标题中含有此参数值的窗口将被排除.</p>
  </dd>

  <dt>ExcludeText</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>文本中含有此参数值的窗口将被排除.</p>
  </dd>

</dl>

<h2 id="Error_Handling">错误处理</h2>
<p>如果找不到窗口或控件, 则抛出 <a href="../objects/Error.htm#TargetError">TargetError</a>.</p>
<p>如果控件的当前位置无法确定, 则抛出 <a href="../objects/Error.htm#OSError">OSError</a>.</p>

<h2 id="Remarks">备注</h2>
<p>为了提高可靠性, 每次使用此函数后都会自动执行延迟. 该延迟可以通过 <a href="SetControlDelay.htm">SetControlDelay</a> 来更改.</p>
<p>窗口标题和文本是区分大小写的. 除非 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 被打开, 否则不会检测隐藏窗口.</p>

<h2 id="Related">相关</h2>
<p><a href="ControlGetPos.htm">ControlGetPos</a>, <a href="WinMove.htm">WinMove</a>, <a href="SetControlDelay.htm">SetControlDelay</a>, <a href="Control.htm">Control 函数</a></p>
<h2 id="Examples">示例</h2>
<div class="ex" id="ExControlMoveTimer">
<p><a class="ex_number" href="#ExControlMoveTimer"></a> 演示如何在脚本等待用户输入时操作输入框的 OK 按钮.</p>
<pre>SetTimer ControlMoveTimer
IB := InputBox(, "My Input Box")

ControlMoveTimer()
{
    if !WinExist("My Input Box")
        return
    <em>; 否则上面设置为 "上次找到的" 窗口:</em>
    SetTimer, 0
    WinActivate
    ControlMove 10,, 200,, "OK"  <em>; 将 OK 按钮移动到左边并增加其宽度.</em>
}</pre>
</div>

</body>
</html>