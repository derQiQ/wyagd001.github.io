<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>Exit - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The Exit function exits the current thread." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>Exit</h1>

<p>退出<a href="../misc/Threads.htm">当前线程</a>.</p>

<pre class="Syntax"><span class="func">Exit</span> <span class="optional">ExitCode</span></pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>ExitCode</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>一个介于 -2147483648 和 2147483647 之间的整数, 在脚本退出时返回给它的调用者. 此代码可以被任何调用脚本的程序访问, 例如另一个脚本(使用 RunWait) 或批处理(.bat) 文件. 如果省略, 则 <em>ExitCode</em> 默认为零. 零一般用来表示成功.</p>
  </dd>

</dl>

<h2 id="Remarks">备注</h2>
<p>Exit 函数只终止<a href="../misc/Threads.htm">当前线程</a>. 换句话说, 由<a href="../objects/Menu.htm">菜单</a>, <a href="SetTimer.htm">计时器</a>或<a href="../Hotkeys.htm">热键</a>子例程直接或间接调用的函数堆栈全部都会像遇到 <a href="Return.htm">Return</a> 那样立即被返回. 如果直接在这样的函数中使用 -- 或者在<a href="../Language.htm#global-code">全局代码</a>中使用 -- Exit 等同于 <a href="Return.htm">Return</a>.</p>
<p>如果脚本不是<a href="../Scripts.htm#persistent">持续运行的</a>, 并且这是最后一个线程, 那么脚本将在线程退出后终止.</p>
<p>使用 <a href="ExitApp.htm">ExitApp</a> 来完全终止<a href="../Scripts.htm#persistent">持续运行的</a>脚本.</p>

<h2 id="Related">相关</h2>
<p><a href="ExitApp.htm">ExitApp</a>, <a href="OnExit.htm">OnExit</a>, <a href="../Functions.htm">函数</a>, <a href="Return.htm">Return</a>, <a href="../misc/Threads.htm">线程</a>, <a href="Persistent.htm">Persistent</a></p>

<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 在这个例子中, Exit 函数终止 call_exit 函数以及调用函数.</p>
<pre>
#z::
{
    call_exit
    MsgBox "This MsgBox will never happen because of the Exit."
    call_exit() 
    {
        Exit <em>; 终止当前函数以及调用它的函数.</em>
    }
}
</pre>
</div>

</body>
</html>