<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>Return - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The Return statement returns from a subroutine to which execution had previously jumped via function-call, Hotkey activation, or other means." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>Return</h1>

<p>从子程序返回到之前通过<a href="../Functions.htm">函数调用</a>, <a href="../Hotkeys.htm">Hotkey</a> 激活, 或其他方式执行跳转的地方.</p>

<pre class="Syntax"><span class="func">Return</span> <span class="optional">Expression</span></pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>Expression</dt>
  <dd><p>当 <code>return</code> 不在<a href="../Functions.htm">函数</a>内使用时, 应该省略此参数.</p>
      <p>由于此参数为<a href="../Variables.htm#Expressions">表达式</a>, 下面所有的例子都是有效的:</p>
<pre>return 3
return "literal string"
return MyVar 
return i + 1
return true  <em>; 返回数字 1 表示 "true".</em>
return ItemCount &lt; MaxItems  <em>; 返回 true 或 false 值.</em>
return FindColor(TargetColor)</pre>
    </dd>

</dl>
<h2 id="Remarks">备注</h2>
<p>如果表达式用圆括号括起来, 则 <code>Return</code> 后面的空格或制表符是可选的, 如 <code>return(expression)</code>.</p>
<p>如果没有调用者可返回, 则 <em>Return</em> 将执行 <a href="Exit.htm">Exit</a> 作为代替.</p>
<p>在<a href="../Functions.htm#return">返回值给调用者</a>中描述了多种从函数中返回多个值给调用者的方法.</p>
<h2 id="Related">相关</h2>
<p><a href="../Functions.htm">函数</a>, <a href="Exit.htm">Exit</a>, <a href="ExitApp.htm">ExitApp</a></p>
<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 第一个 Return 确保如果前面的条件为真, 则跳过后续的函数调用. 第二个 Return 是多余的, 当在这样的函数结尾使用时.</p>
<pre>#z::  <em>; Win-Z</em>
^#z::  <em>; Ctrl-Win-Z</em>
{
    MsgBox "A Win-Z hotkey was pressed."
    if GetKeyState("Ctrl")
        return  <em>; 尽早完成, 跳过下面的函数调用.</em>
    MyFunction()
}

MyFunction()
{
    Sleep 1000
    return  <em>; 像这样在函数末尾使用时, 是多余的.</em>
}</pre>
</div>

</body>
</html>