<!DOCTYPE HTML>
<html>
<head>
<title>WinSet | AutoHotkey</title>
<meta name="description" content="The WinSet command makes a variety of changes to the specified window, such as "always on top" and transparency." />
<meta name="ahk:equiv-v2" content="commands/Win.htm" />
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>WinSet</h1>

<p>对指定的窗口进行各种设置, 例如 "总在最前面" 和透明度.</p>
<pre class="Syntax"><span class="func">WinSet</span>, <a href="#SubCommands">SubCommand</a>, Value <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>

<h2 id="Parameters">参数</h2>
<dl>
  <dt>SubCommand, Value</dt>
  <dd>他们互相依赖, 其用法描述<a href="#SubCommands">如下</a>.</dd>

  <dt>WinTitle</dt>
  <dd>窗口标题或识别目标窗口的其他条件. 请参阅 <a href="../misc/WinTitle.htm">WinTitle</a>.</dd>

  <dt>WinText</dt>
  <dd>如果使用此参数, 那么它必须是目标窗口中单个文本元素的子字符串(和内置的 Window Spy 工具显示的一样). 当 <a href="DetectHiddenText.htm">DetectHiddenText</a> 设置为 ON 时, 那么会检测到隐藏文本元素.</dd>

  <dt>ExcludeTitle</dt>
  <dd>标题中含有此参数值的窗口将被排除.</dd>

  <dt>ExcludeText</dt>
  <dd>文本中含有此参数值的窗口将被排除.</dd>
</dl>

<h2 id="SubCommands">子命令</h2>
<p>对于 <em>SubCommand</em>, 指定以下命令之一:</p>
<ul>
  <li><a href="#AlwaysOnTop">AlwaysOnTop</a>: 让窗口处于置顶状态.</li>
  <li><a href="#Bottom">Bottom</a>: 发送窗口到堆栈的底部; 即在所有其他窗口的下面.</li>
  <li><a href="#Top">Top</a>: 把窗口带回到堆栈的顶部而不进行激活.</li>
  <li><a href="#Disable">Disable</a>: 禁用窗口.</li>
  <li><a href="#Enable">Enable</a>: 启用窗口.</li>
  <li><a href="#Redraw">Redraw</a>: 重绘窗口.</li>
  <li><a href="#Style">Style</a>: 改变窗口的样式.</li>
  <li><a href="#ExStyle">ExStyle</a>: 改变窗口的扩展样式.</li>
  <li><a href="#Region">Region</a>: 改变窗口的形状为指定的矩形, 椭圆形或多边形.</li>
  <li><a href="#Transparent">Transparent</a>: 设置窗口为半透明状态.</li>
  <li><a href="#TransColor">TransColor</a>: 让目标窗口中指定颜色的所有像素透明.</li>
</ul>

<h3 id="AlwaysOnTop">AlwaysOnTop</h3>
<p>让窗口处于置顶状态.</p>
<pre class="Syntax"><span class="func">WinSet</span>, AlwaysOnTop <span class="optional">, OnOffToggle, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>对于 <em>OnOffToggle</em>, 指定 <code>On</code> 打开此设置, <code>Off</code> 关闭, 而 <code>Toggle</code> 切换到当前的相反状态. 如果 <em>OnOffToggle</em> 是空白或省略, 默认为 <code>Toggle</code>. <strong>Topmost</strong> 可以代替 AlwaysOnTop.</p>
<p><span class="ver">[v1.1.30+]:</span> 值 1(或 <code>true</code>), 0(或 <code>false</code>) 和 -1 可以分别用来代替 On, Off 和 Toggle.</p>

<h3 id="Bottom">Bottom</h3>
<p>发送窗口到堆栈的底部; 即在所有其他窗口的下面.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Bottom <span class="optional">,, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>这个效果类似于按下 <kbd>Alt</kbd>+<kbd>Esc</kbd>.</p>

<h3 id="Top">Top</h3>
<p>把窗口带回到堆栈的顶部而不进行<a href="WinActivate.htm">激活</a>.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Top <span class="optional">,, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>但是, 在大多数情况下系统默认设置会激活它. 此外, 当操作系统阻止应用程序从用户抢夺焦点时, 此命令可能没有效果(这可能取决于当前活动窗口的类型和用户当前正在进行的操作这些因素). 一个可能的解决方法是让窗口暂时 <a href="#AlwaysOnTop">AlwaysOnTop</a>, 然后关闭 AlwaysOnTop.</p>

<h3 id="Disable">Disable</h3>
<p>禁用窗口.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Disable <span class="optional">,, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>当窗口被禁用时, 用户不能移动它或与它的控件进行交互. 此外, 被禁用的窗口会从 alt-tab 列表中移除.</p>

<h3 id="Enable">Enable</h3>
<p>启用窗口.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Enable <span class="optional">,, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>

<h3 id="Redraw">Redraw</h3>
<p>重绘窗口.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Redraw <span class="optional">,, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>此子命令尝试通过通知操作系统窗口的矩形需要重新绘制来更新窗口的外观/内容. 如果此方法对特殊的窗口无效, 那么尝试使用 <a href="WinMove.htm">WinMove</a>. 如果仍然无效, 那么尝试 <a href="WinHide.htm">WinHide</a> 与 <a href="WinShow.htm">WinShow</a> 一起.</p>

<h3 id="Style">Style</h3>
<p>改变窗口的样式.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Style, N <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>如果 <em>N</em> 的首个字符为加号或减号, 那么会分别的添加或移除 <em>N</em> 中的样式. 如果首个字符为脱字符(^),  那么 N 中的样式会被切换到相反的状态. 如果首个字符为数字, 则窗口样式会被完全覆盖为 <em>N</em>.</p>
<p>如果设置失败, 则 <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 被置为 1, 成功则为 0. 没有找到目标窗口或无法应用此样式时会设置失败.</p>
<p>改变可见窗口的某些样式后, 可能需要使用上面的 <a href="#Redraw">Redraw</a> 子命令对窗口进行重绘. 最后, <a href="../misc/Styles.htm">样式表</a>中列出了一些常用的样式编号. 例如:</p>
<pre>WinSet, Style, -0xC00000, A  <em>; 移除活动窗口的标题栏(WS_CAPTION).</em></pre>

<h3 id="ExStyle">ExStyle</h3>
<p>改变窗口的扩展样式.</p>
<pre class="Syntax"><span class="func">WinSet</span>, ExStyle, N <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>有关细节, 请参阅 <a href="#Style">Style</a> 子命令. 例如:</p>
<pre>WinSet, ExStyle, ^0x80, <i>WinTitle</i> <em>; 切换 WS_EX_TOOLWINDOW 属性, 它会移除/添加窗口到 alt-tab 列表.</em></pre>

<div id="region">
  <h3 id="Region">Region</h3>
</div>
<p>改变窗口的形状为指定的矩形, 椭圆形或多边形.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Region <span class="optional">, Options, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>如果 <em>Options</em> 参数为空或忽略, 那么恢复窗口为原来/默认的形状. 否则, 可以指定一个或多个的下列选项, 选项之间使用空格分隔:</p>
<p><strong>Wn</strong>: 矩形或椭圆形的宽度. 例如: <code>w200</code>.</p>
<p><strong>Hn</strong>: 矩形或椭圆形的高度. 例如: <code>h200</code>.</p>
<p><strong>X-Y</strong>: 这样的一对为 X/Y 坐标对. 例如, <code>200-0</code> 表示 X 坐标为 200, Y 坐标为 0.</p>
<p><strong>E</strong>: 设置窗口形状为椭圆形而不是矩形. 此选项仅在同时指定了 <strong>W</strong> 和 <strong>H</strong> 时才有效.</p>
<p><strong>R[w-h]</strong>: 设置窗口形状为圆角矩形. 例如, <code>R30-30</code> 表示每个角为 30x30 的椭圆. 如果 <strong>w-h</strong> 省略, 则使用 30-30. <strong>R</strong> 仅在同时指定了 <strong>W</strong> 和 <strong>H</strong> 时才有效.</p>
<p><strong>矩形或椭圆形</strong>: 如果指定了 <strong>W</strong> 和 <strong>H</strong> 选项, 那么会设置新显示的区域为矩形, 且其左上角的坐标为首个(且唯一) <strong>X-Y</strong> 坐标对. 但是, 如果同时指定了 <strong>E</strong> 选项, 那么会设置窗口形状为椭圆形而不是矩形. 例如: <code>WinSet, Region, 50-0 W200 H250 E, WinTitle</code>.</p>
<p><strong>多边形</strong>: 如果 <strong>W</strong> 和 <strong>H</strong> 选项都不存在, 新的显示区域将是一个由多对 <strong>X-Y</strong> 坐标对确定的多边形(每对坐标以窗口左上角为原点).  例如, 如果指定了三对坐标, 那么在多数时候窗口形状会被设置为三角形. 坐标对彼此间的相对顺序有时很重要. 此外, 可以在 <em>Options</em> 中指定单词 <strong>Wind</strong> 从而使用缠绕法代替变换方法来确定多边形的形状.</p>
<p>如果设置失败, 则 <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 被置为 1, 成功则为 0. 出现以下情况时会设置失败: 1) 目标窗口不存在; 2) <em>Options</em> 有一个或多个选项无效; 3) 指定了超过 2000 对坐标; 4) 指定的形状是无效的或不适用于目标窗口.</p>
<p>请参阅页面底部的<a href="#ExRegion">示例 #7</a>, 了解如何去使用此子命令.</p>
<p>当为脚本所拥有的窗口设置了一个区域时, 系统可能会自动改变它用来渲染窗口框架的方法, 从而改变其外观. 其效果类似于下面所示的解决方法 #2, 但只影响窗口, 直到其区域被重置.</p>
<p><strong>已知限制</strong>: 为不属于脚本的窗口设置一个区域可能会产生意想不到的结果, 如果该窗口有标题(标题栏), 并且系统启用了桌面合成. 这是因为可见的框架实际上并不是窗口的一部分, 而是由一个名为 "桌面窗口管理器" 的单独系统进程渲染的. 注意, 在 Windows 8 及以后的版本中, 桌面合成<a href="https://docs.microsoft.com/en-us/windows/compatibility/desktop-window-manager-is-always-on">始终处于启用状态</a>. 可以使用以下两种解决方法之一:</p>
<pre><em>; #1: 移除窗口标题.</em>
WinSet Style, -0xC00000, Window Title

<em>; 恢复:</em>
WinSet Style, +0xC00000, Window Title</pre>
<pre><em>; #2: 禁用 DWM 渲染窗口的框架.</em>
DllCall("dwmapi\DwmSetWindowAttribute", "ptr", WinExist("Window Title")
  , "uint", DWMWA_NCRENDERING_POLICY := 2, "int*", DWMNCRP_DISABLED := 1, "uint", 4)

<em>; 恢复(这也可能导致任何设置的区域被忽略):</em>
DllCall("dwmapi\DwmSetWindowAttribute", "ptr", WinExist("Window Title")
  , "uint", DWMWA_NCRENDERING_POLICY := 2, "int*", DWMNCRP_ENABLED := 2, "uint", 4)
</pre>

<div id="trans">
  <h3 id="Transparent">Transparent</h3>
</div>
<p>设置窗口为半透明状态.</p>
<pre class="Syntax"><span class="func">WinSet</span>, Transparent <span class="optional">, N, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>指定 <em>N</em> 为介于 0 和 255 之间的数字来表示透明度: 0 表示完全透明, 255 表示完全不透明.</p>
<p>指定单词 <code>Off</code> 可以完全关闭窗口的透明度. 这在功能上与 <code>WinSet, <a href="#TransColor">TransColor</a>, Off, <i>WinTitle</i></code> 相同. 指定 <code>Off</code> 与指定 255 的区别是, 这样可以提升性能并降低系统资源的占用.</p>
<p>例如, 要使任务栏透明, 请使用 <code>WinSet, Transparent, 150, ahk_class Shell_TrayWnd</code>. 类似地, 要使经典的开始菜单透明, 请参见<a href="#ExTransStartMenu">示例 #5</a>. 要使开始菜单的子菜单透明, 还需要包含<a href="#ExTransMenu">示例 #6</a> 中的脚本.</p>
<p>在使用 <code>Off</code> 之前, 将透明级别设置为 255, 可以避免窗口重绘问题, 比如黑色背景. 如果窗口仍无法正确重绘, 那么请参阅 <a href="#Redraw">Redraw</a> 了解可能的解决方法.</p>
<p><span class="ver">[v1.1.24.05+]</span>: 这个子命令也适用于缺少标题(标题栏) 并且缺少<a href="#AlwaysOnTop">置顶</a>属性的窗口.</p>

<h3 id="TransColor">TransColor</h3>
<p>让目标窗口中指定颜色的所有像素透明.</p>
<pre class="Syntax"><span class="func">WinSet</span>, TransColor, Color <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>这样可以让它后面的窗口内容显示出来. 如果用户点击透明部分, 那么点击会 "穿透" 到此窗口的后面. 指定 <em>Color</em> 为颜色名称或 RGB 值(请参阅<a href="Progress.htm#colors">颜色图表</a>进行了解或使用 <a href="PixelGetColor.htm">PixelGetColor</a> 的 RGB 模式). 此外, 要让目标窗口中符合指定颜色的部分半透明, 请在颜色参数后添加空格(不是逗号) 和透明度等级(0-255). 例如: <code>WinSet, TransColor, EEAA99 150, <i>WinTitle</i></code>.</p>
<p>单词 <code>Off</code> 可以完全关闭窗口的透明度. 这与 <code>WinSet, <a href="#Transparent">Transparent</a>, Off, <i>WinTitle</i></code> 功能完全相同. 指定 <code>Off</code> 与指定 255 的区别是, 这样可以提升性能并降低系统资源的占用.</p>
<p>TransColor 常用来创建屏幕显示(OSD) 和其他视觉效果. <a href="Gui.htm#OSD">在 Gui 页面的底部</a>有一个屏幕显示的例子.</p>
<p>在使用 <code>Off</code> 之前, 将透明级别设置为 255, 可以避免窗口重绘问题, 比如黑色背景. 如果窗口仍无法正确重绘, 那么请参阅 <a href="#Redraw">Redraw</a> 了解可能的解决方法.</p>
<p>要改变窗口现有的 TransColor, 可能需要在改变前关闭透明度.</p>
<p><span class="ver">[v1.1.24.05+]</span>: 这个子命令也适用于缺少标题(标题栏) 并且缺少<a href="#AlwaysOnTop">置顶</a>属性的窗口.</p>

<h2 id="Remarks">备注</h2>
<p>除了上面明确指出的情况外, 此命令不会改变 <a href="../misc/ErrorLevel.htm">ErrorLevel</a>.</p>
<p>尽管 Windows 2000/XP 或更高版本中支持透明度, 但只有在 Windows XP 或更高版本中才能获取窗口的当前透明度设置(通过 <a href="WinGet.htm">WinGet</a>).</p>
<p>脚本的 <a href="SplashTextOn.htm">SplashText</a> 窗口可以通过下面的命令使他不置顶:</p>
<pre>WinSet, AlwaysOnTop, Off, My Splash Window Title</pre>
<p>窗口标题和文本是区分大小写的. 只有在 <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> 打开时, 才能检测到隐藏窗口.</p>

<h2 id="Related">相关</h2>
<p><a href="WinGet.htm">WinGet</a>, <a href="WinHide.htm">WinHide</a>, <a href="WinSetTitle.htm">WinSetTitle</a>, <a href="WinMove.htm">WinMove</a>, <a href="WinActivate. htm">WinActivate</a>, <a href="Control.htm">Control</a></p>

<h2 id="Examples">示例</h2>
<div class="ex" id="ExTransparent">
<p><a class="ex_number" href="#ExTransparent"></a> 让记事本变得有点透明.</p>
<pre>WinSet, Transparent, 200, Untitled - Notepad</pre>
</div>

<div class="ex" id="ExTransColor">
<p><a class="ex_number" href="#ExTransColor"></a> 让白色部分透明.</p>
<pre>WinSet, TransColor, White, Untitled - Notepad</pre>
</div>

<div class="ex" id="ExAlwaysOnTop">
<p><a class="ex_number" href="#ExAlwaysOnTop"></a> 切换计算器的置顶状态.</p>
<pre>WinSet, AlwaysOnTop, Toggle, Calculator</pre>
</div>

<div class="ex" id="ExTransHotkey">
<p><a class="ex_number" href="#ExTransHotkey"></a> 演示子命令 <a href="#Transparent">Transparent</a> 和 <a href="#TransColor">TransColor</a> 的效果. 注意: 如果在鼠标光标悬停在 TransColor 造成的不可见的像素上时按下其中一个热键, 则这个像素下面可见的窗口将会被替代! 此外, <kbd>Win</kbd>+<kbd>G</kbd> 只会对 Windows XP 或以后的系统上才有效果, 因为 Windows 2000 不支持获取透明度设置.</p>
<pre>#t::  <em>; 按下 <kbd>Win</kbd>+<kbd>T</kbd> 来让鼠标光标下的颜色透明.</em>
MouseGetPos, MouseX, MouseY, MouseWin
PixelGetColor, MouseRGB, %MouseX%, %MouseY%, RGB
<em>; 似乎有必要首先关闭任何现有的透明度:</em>
WinSet, TransColor, Off, ahk_id %MouseWin%
WinSet, TransColor, %MouseRGB% 220, ahk_id %MouseWin%
return

#o::  <em>; 按下 <kbd>Win</kbd>+<kbd>O</kbd> 来关闭鼠标下窗口的透明度.</em>
MouseGetPos,,, MouseWin
WinSet, TransColor, Off, ahk_id %MouseWin%
return

#g::  <em>; 按下 <kbd>Win</kbd>+<kbd>G</kbd> 来显示鼠标下窗口的当前透明设置.</em>
MouseGetPos,,, MouseWin
WinGet, Transparent, Transparent, ahk_id %MouseWin%
WinGet, TransColor, TransColor, ahk_id %MouseWin%
ToolTip Translucency:`t%Transparent%`nTransColor:`t%TransColor%
return</pre>
</div>

<div class="ex" id="ExTransStartMenu">
<p><a class="ex_number" href="#ExTransStartMenu"></a> 使经典开始菜单透明(另外使开始菜单的子菜单透明, 请参阅<a href="#ExTransMenu">示例 #6</a>).</p>
<pre>DetectHiddenWindows, On
WinSet, Transparent, 150, ahk_class BaseBar</pre>
</div>

<div class="ex" id="ExTransMenu">
<p><a class="ex_number" href="#ExTransMenu"></a> 要使整个系统上的所有或选定的菜单都透明, 请保持如下所示的脚本始终运行着. 请注意, 尽管这样的脚本不能使自己的菜单透明, 但它可以使其他脚本的菜单透明.</p>
<pre>#Persistent
SetTimer, WatchForMenu, 5
return  <em>; 自动执行段结束.</em>

WatchForMenu:
DetectHiddenWindows, On  <em>; 可以让检测菜单更早.</em>
if WinExist("ahk_class #32768")
    WinSet, Transparent, 150  <em>; 使用上面一行找到的窗口.</em>
return</pre>
</div>

<div class="ex" id="ExRegion">
<p><a class="ex_number" href="#ExRegion"></a> <a href="#Region">Region</a> 子命令的用法:</p>
<p>隐藏记事本在这矩形之外的所有部分.</p>
<pre>WinSet, Region, 50-0 W200 H250, ahk_class Notepad</pre>
<p>与上面相同, 不过带有 40x40 的圆角.</p>
<pre>WinSet, Region, 50-0 W200 H250 R40-40, ahk_class Notepad</pre>
<p>创建椭圆形窗口.</p>
<pre>WinSet, Region, 50-0 W200 H250 E, ahk_class Notepad</pre>
<p>创建倒三角形窗口.</p>
<pre>WinSet, Region, 50-0 250-0 150-250, ahk_class Notepad</pre>
<p>将窗口恢复原来/默认的形状.</p>
<pre>WinSet, Region,, ahk_class Notepad</pre>
<p>它在记事本(或任何其他窗口) 内创建一个透明的矩形孔. 下面指定了两个矩形: 一个外部的, 一个内部的. 每个矩形由 5 对 X/Y 坐标组成, 因为第一对是用来 "闭合" 每个矩形的重复坐标.</p>
<pre>WinSet, Region, 0-0 300-0 300-300 0-300 0-0   100-100 200-100 200-200 100-200 100-100, ahk_class Notepad</pre>
</div>

</body>
</html>