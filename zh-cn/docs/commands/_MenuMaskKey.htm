<!DOCTYPE HTML>
<html>
<head>
<title>#MenuMaskKey | AutoHotkey</title>
<meta name="description" content="The #MenuMaskKey directive changes which key is used to mask WIN or ALT keyup events." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>#MenuMaskKey <span class="ver">[AHK_L 38+]</span></h1>

<p>改变用来掩饰(屏蔽) <kbd>Win</kbd> 或 <kbd>Alt</kbd> 松开事件的按键.</p>

<pre class="Syntax"><span class="func">#MenuMaskKey</span> KeyName</pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>KeyName</dt>
  <dd><p><a href="../KeyList.htm">按键名称</a>或指定了非零虚拟按键代码的 <a href="../KeyList.htm#vk">VKnn</a> 序列. 扫描码只在 <span class="ver">[v1.1.28+]</span> 中可以使用, 它也支持 <a href="../KeyList.htm#sc">SCnnn</a> 和 VKnnSCnnn.</p></dd>

</dl>

<h2 id="Remarks">备注</h2>
<p>掩饰键会自动发送, 以防止开始菜单或活动窗口的菜单栏在未预期的时间激活.</p>
<p>默认的掩饰键为 <kbd>Ctrl</kbd>. 此指令可用于将掩饰键更改为具有较少副作用的键.</p>
<p>好的候选者一般是没有效果的虚拟按键代码, 例如 vkE8, 微软的文档是 "未定义的", 或 vkFF, 它被保留为 "没有映射"(一个没有功能的按键).</p>
<p class="note"><strong>注意</strong>: Microsoft 可以随时为未指定的键码指定一个效果. 例如, vk07 曾经是未定义的并且可以安全使用, 但从 Windows 10 1909 开始, 它就被保留为打开游戏栏.</p>
<p><span class="ver">[v1.1.28+]:</span> 可以指定 VK 和 SC, 并且不需要匹配存在的按键. 指定 <code>vk00sc000</code> 将禁用所有自动掩饰. 某些值, 如 0 VK 带有非-0 SC, 可能无法抑制开始菜单.</p>
<p>此设置是全局的, 这意味着只需要使用一次(在脚本的任意位置) 就会影响整个脚本.</p>
<p>和其他指令一样, #MenuMaskKey 不能有条件地执行.</p>
<p><strong>Hotkeys:</strong> 如果使用键盘钩子或鼠标钩子实现热键, 则最终的按键可能对活动窗口和系统是不可见的. 如果系统 <em>只</em> 检测到 Win 或 Alt 按下和松开, 而期间没有其他键按下, 通常会激活一个菜单. 为防止这种情况发生, 键盘或鼠标钩子可能会自动发送掩饰键.</p>
<p><span class="ver">[v1.1.27+]:</span> 如果满足以下所有条件, 则按下钩子热键将导致下一个 Alt 键或 Win 键被屏蔽(发送掩饰键):</p>
<ul>
  <li>热键原有功能被屏蔽(没有<a href="../Hotkeys.htm#Tilde">颚化符修饰键</a>).</li>
  <li>当热键按下时, <kbd>Alt</kbd> 或 <kbd>Win</kbd> 逻辑上是按下的.</li>
  <li>修饰符物理上被按下或热键需要修饰符是激活的. 例如, <code>$#a::</code> 结合 <code>AppsKey::RWin</code> 在一起时, 当 <kbd>Menu</kbd>+<kbd>A</kbd>按下时发送掩饰键, 但是 <kbd>Menu</kbd> 本身能打开开始菜单.</li>
  <li>如果按下了 <kbd>Ctrl</kbd>, 则不会掩饰(屏蔽) <kbd>Alt</kbd>, 因为 <kbd>Ctrl+Alt</kbd> 不激活菜单栏.</li>
  <li>如果最近的 Win 按下被 <kbd>Ctrl</kbd>, <kbd>Shift</kbd> 或 <kbd>Alt</kbd> 修饰, 则不会掩饰(屏蔽) <kbd>Win</kbd>, 因为在这种情况下开始菜单通常不会激活. 但是, 如果按键是最后物理按下的键时, 即使是 Win 键重复按键也会发生, 因此很难预测 <em>什么时间</em> 是最近的 Win 键被按下的时间.</li>
  <li>要么没有使用键盘钩子(如 鼠标热键), 要么自最近一次 Alt 或 Win 按下之后没有其他按下或松开事件发生. 请注意, 即使对于修饰键, 甚至在发送其他键之后, 重复按键也会发生, 但只发生在最后一次物理按下的键上.</li>
</ul>
<p>如果键盘钩子没有使用时, 鼠标热键会立即发送掩饰键.</p>
<p>热键带有<a href="../Hotkeys.htm#Tilde">颚化符修饰键</a>并不会阻止按键的原有功能, 因此在 <span class="ver">[v1.1.27+]</span> 这些热键不会发送掩饰键. 热键像 <code>~#a::</code> 仍然屏蔽开始菜单, 因为系统检测到 <kbd>Win</kbd> 已经与另一个键结合使用. 但是, 鼠标热键和 <kbd>Win</kbd> 本身(<code>~LWin::</code> 和 <code>~RWin::</code>) 不会屏蔽开始菜单.</p>
<p>开始菜单(或活动窗口的菜单栏) 可以通过发送任何按键来屏蔽. 以下示例禁用左 <kbd>Win</kbd> 激活开始菜单的功能, 同时仍允许将其用于修饰键:</p>
<pre>~LWin::Send {Blind}{vkE8}</pre>
<p><strong>Send:</strong> <a href="Send.htm">Send</a>, <a href="ControlSend.htm">ControlSend</a> 和相关命令经常松开修饰键作为其正常操作的一部分. 例如, 热键 <code>&lt;#a::SendRaw %Address%</code> 通常必须在发送 <em>Address</em> 的内容之前释放 LWin 键, 然后再按下左 <kbd>Win</kbd>(以便其他 Win 键组合继续工作). 在这种情况下可能会发送掩码键以防止 Win 或 Alt 键松开启动了菜单.</p>

<h2 id="Related">相关</h2>
<p>请参阅<a href="https://www.autohotkey.com/board/topic/20619-extraneous-control-key-presses-generated-by-or-hotkeys/">这个帖子</a>了解背景信息.</p>

<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 基础用法.</p>
<pre>#MenuMaskKey vkE8  <em>; 将掩码键改成未分配的按键, 如 vkE8 等.</em>
#Space::Run % A_ScriptDir  <em>; 额外的 Ctrl 键不会被触发.</em></pre>
</div>

<div class="ex" id="ExAdvanced">
<p><a class="ex_number" href="#ExAdvanced"></a> 展示该指令如何使 vkFF 代替 LControl 被发送.</p>
<pre>#MenuMaskKey vkFF  <em>; vkFF 是未映射的.</em>
#UseHook
#Space::
!Space::
    KeyWait LWin
    KeyWait RWin
    KeyWait Alt
    KeyHistory
return</pre>
</div>

</body>
</html>